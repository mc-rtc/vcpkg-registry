diff --git a/CMakeLists.txt b/CMakeLists.txt
index ea8b35bf5..e9d9905fd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -34,6 +34,10 @@ set_property(GLOBAL PROPERTY USE_FOLDERS ON)
 project(${PROJECT_NAME} C CXX)
 set(MC_RTC_SOURCE_DIR "${PROJECT_SOURCE_DIR}")
 
+if(NOT DEFINED MC_RTC_INSTALL_PREFIX)
+  set(MC_RTC_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
+endif()
+
 option(GENERATE_COVERAGE "Generate coverage data" FALSE)
 if("${CMAKE_CXX_FLAGS}" MATCHES "--coverage")
   set(GENERATE_COVERAGE TRUE CACHE BOOL "Generate coverage data" FORCE)
@@ -131,8 +135,10 @@ macro(mc_rtc_set_prefix NAME FOLDER)
   set(MC_${NAME}_LIBRARY_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/lib/${FOLDER})
   if(WIN32)
     set(MC_${NAME}_RUNTIME_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/bin/${FOLDER})
+    set(MC_${NAME}_RUNTIME_DESTINATION_PREFIX ${MC_RTC_INSTALL_PREFIX}/bin/${FOLDER})
   else()
     set(MC_${NAME}_RUNTIME_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/lib/${FOLDER})
+    set(MC_${NAME}_RUNTIME_DESTINATION_PREFIX ${MC_RTC_INSTALL_PREFIX}/lib/${FOLDER})
   endif()
   # For backward compatibility
   set(MC_${NAME}_INSTALL_PREFIX "${MC_${NAME}_LIBRARY_INSTALL_PREFIX}")
diff --git a/include/mc_rtc/config.h.cmake.in b/include/mc_rtc/config.h.cmake.in
index 89677ec9a..8aad610fe 100644
--- a/include/mc_rtc/config.h.cmake.in
+++ b/include/mc_rtc/config.h.cmake.in
@@ -10,11 +10,11 @@ namespace mc_rtc
 {
 
 constexpr auto MC_ENV_DESCRIPTION_PATH = "${MC_ENV_DESCRIPTION_PATH}";
-constexpr auto INSTALL_PREFIX = "${CMAKE_INSTALL_PREFIX}/";
-constexpr auto MC_ROBOTS_INSTALL_PREFIX = "${MC_ROBOTS_RUNTIME_INSTALL_PREFIX}/";
-constexpr auto MC_OBSERVERS_INSTALL_PREFIX = "${MC_OBSERVERS_RUNTIME_INSTALL_PREFIX}/";
-constexpr auto MC_CONTROLLER_INSTALL_PREFIX = "${MC_CONTROLLER_RUNTIME_INSTALL_PREFIX}/";
-constexpr auto MC_PLUGINS_INSTALL_PREFIX = "${MC_PLUGINS_RUNTIME_INSTALL_PREFIX}";
+constexpr auto INSTALL_PREFIX = "${MC_RTC_INSTALL_PREFIX}/";
+constexpr auto MC_ROBOTS_INSTALL_PREFIX = "${MC_ROBOTS_RUNTIME_DESTINATION_PREFIX}/";
+constexpr auto MC_OBSERVERS_INSTALL_PREFIX = "${MC_OBSERVERS_RUNTIME_DESTINATION_PREFIX}/";
+constexpr auto MC_CONTROLLER_INSTALL_PREFIX = "${MC_CONTROLLER_RUNTIME_DESTINATION_PREFIX}/";
+constexpr auto MC_PLUGINS_INSTALL_PREFIX = "${MC_PLUGINS_RUNTIME_DESTINATION_PREFIX}";
 constexpr auto DATA_PATH = "${CMAKE_INSTALL_PREFIX}/share/mc_rtc/";
 constexpr auto CONF_PATH = "${CMAKE_INSTALL_PREFIX}/etc/mc_rtc.yaml";
 
diff --git a/src/mc_control/samples/Admittance/etc/AdmittanceSample.in.yaml b/src/mc_control/samples/Admittance/etc/AdmittanceSample.in.yaml
index 9480cdf73..02362e3d7 100644
--- a/src/mc_control/samples/Admittance/etc/AdmittanceSample.in.yaml
+++ b/src/mc_control/samples/Admittance/etc/AdmittanceSample.in.yaml
@@ -11,12 +11,12 @@ StepByStep: false
 IdleKeepState: true
 # Where to look for state libraries
 StatesLibraries:
-- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
-- "@MC_Admittance_STATES_RUNTIME_INSTALL_PREFIX@"
+- "@MC_STATES_RUNTIME_DESTINATION_PREFIX@"
+- "@MC_Admittance_STATES_RUNTIME_DESTINATION_PREFIX@"
 # Where to look for state files
 StatesFiles:
-- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
-- "@MC_Admittance_STATES_RUNTIME_INSTALL_PREFIX@/data"
+- "@MC_STATES_RUNTIME_DESTINATION_PREFIX@/data"
+- "@MC_Admittance_STATES_RUNTIME_DESTINATION_PREFIX@/data"
 
 # Additional robots to load
 robots:
diff --git a/src/mc_control/samples/Admittance/src/states/CMakeLists.txt b/src/mc_control/samples/Admittance/src/states/CMakeLists.txt
index 9f215b374..e2cc06aa9 100644
--- a/src/mc_control/samples/Admittance/src/states/CMakeLists.txt
+++ b/src/mc_control/samples/Admittance/src/states/CMakeLists.txt
@@ -6,7 +6,7 @@ macro(add_fsm_state state_name state_SRC state_HDR)
 
     set_target_properties(${state_name} PROPERTIES PREFIX "")
     set_target_properties(${state_name} PROPERTIES COMPILE_FLAGS "-DMC_CONTROL_FSM_STATE_EXPORTS")
-    set_target_properties(${state_name} PROPERTIES INSTALL_RPATH "${MC_STATES_RUNTIME_INSTALL_PREFIX};${MC_Admittance_STATES_RUNTIME_INSTALL_PREFIX}")
+    set_target_properties(${state_name} PROPERTIES INSTALL_RPATH "${MC_STATES_RUNTIME_DESTINATION_PREFIX};${MC_Admittance_STATES_RUNTIME_DESTINATION_PREFIX}")
 
     target_link_libraries(${state_name} PUBLIC mc_rtc::mc_control_fsm)
 
diff --git a/src/mc_control/samples/Door/etc/DoorSample.in.yaml b/src/mc_control/samples/Door/etc/DoorSample.in.yaml
index 6073b586e..49086f48a 100644
--- a/src/mc_control/samples/Door/etc/DoorSample.in.yaml
+++ b/src/mc_control/samples/Door/etc/DoorSample.in.yaml
@@ -11,12 +11,12 @@ StepByStep: false
 IdleKeepState: false
 # Where to look for state libraries
 StatesLibraries:
-- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
-- "@MC_Door_STATES_RUNTIME_INSTALL_PREFIX@"
+- "@MC_STATES_RUNTIME_DESTINATION_PREFIX@"
+- "@MC_Door_STATES_RUNTIME_DESTINATION_PREFIX@"
 # Where to look for state files
 StatesFiles:
-- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
-- "@MC_Door_STATES_DATA_INSTALL_PREFIX@"
+- "@MC_STATES_RUNTIME_DESTINATION_PREFIX@/data"
+- "@MC_Door_STATES_DATA_DESTINATION_PREFIX@"
 
 # Additional robots to load
 robots:
diff --git a/src/mc_control/samples/Door/src/states/CMakeLists.txt b/src/mc_control/samples/Door/src/states/CMakeLists.txt
index 9ed6d2561..c44c34380 100644
--- a/src/mc_control/samples/Door/src/states/CMakeLists.txt
+++ b/src/mc_control/samples/Door/src/states/CMakeLists.txt
@@ -6,7 +6,7 @@ macro(add_fsm_state state_name state_SRC state_HDR)
 
     set_target_properties(${state_name} PROPERTIES PREFIX "")
     set_target_properties(${state_name} PROPERTIES COMPILE_FLAGS "-DMC_CONTROL_FSM_STATE_EXPORTS")
-    set_target_properties(${state_name} PROPERTIES INSTALL_RPATH "${MC_STATES_RUNTIME_INSTALL_PREFIX};${MC_Door_STATES_RUNTIME_INSTALL_PREFIX}")
+    set_target_properties(${state_name} PROPERTIES INSTALL_RPATH "${MC_STATES_RUNTIME_DESTINATION_PREFIX};${MC_Door_STATES_RUNTIME_DESTINATION_PREFIX}")
 
     target_link_libraries(${state_name} PUBLIC mc_rtc::mc_control_fsm)
 
diff --git a/src/mc_control/samples/ExternalForces/etc/ExternalForces.in.yaml b/src/mc_control/samples/ExternalForces/etc/ExternalForces.in.yaml
index ccc7444f5..5cb880736 100644
--- a/src/mc_control/samples/ExternalForces/etc/ExternalForces.in.yaml
+++ b/src/mc_control/samples/ExternalForces/etc/ExternalForces.in.yaml
@@ -11,12 +11,12 @@ StepByStep: false
 IdleKeepState: true
 # Where to look for state libraries
 StatesLibraries:
-- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
-- "@MC_ExternalForces_STATES_RUNTIME_INSTALL_PREFIX@"
+- "@MC_STATES_RUNTIME_DESTINATION_PREFIX@"
+- "@MC_ExternalForces_STATES_RUNTIME_DESTINATION_PREFIX@"
 # Where to look for state files
 StatesFiles:
-- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
-- "@MC_ExternalForces_STATES_RUNTIME_INSTALL_PREFIX@/data"
+- "@MC_STATES_RUNTIME_DESTINATION_PREFIX@/data"
+- "@MC_ExternalForces_STATES_RUNTIME_DESTINATION_PREFIX@/data"
 
 # Additional robots to load
 robots:
diff --git a/src/mc_control/samples/ExternalForces/src/states/CMakeLists.txt b/src/mc_control/samples/ExternalForces/src/states/CMakeLists.txt
index 9252bd56a..5cf3e4926 100644
--- a/src/mc_control/samples/ExternalForces/src/states/CMakeLists.txt
+++ b/src/mc_control/samples/ExternalForces/src/states/CMakeLists.txt
@@ -6,7 +6,7 @@ macro(add_fsm_state state_name state_SRC state_HDR)
 
     set_target_properties(${state_name} PROPERTIES PREFIX "")
     set_target_properties(${state_name} PROPERTIES COMPILE_FLAGS "-DMC_CONTROL_FSM_STATE_EXPORTS")
-    set_target_properties(${state_name} PROPERTIES INSTALL_RPATH "${MC_STATES_RUNTIME_INSTALL_PREFIX};${MC_ExternalForces_STATES_RUNTIME_INSTALL_PREFIX}")
+    set_target_properties(${state_name} PROPERTIES INSTALL_RPATH "${MC_STATES_RUNTIME_DESTINATION_PREFIX};${MC_ExternalForces_STATES_RUNTIME_DESTINATION_PREFIX}")
 
     target_link_libraries(${state_name} PUBLIC mc_rtc::mc_control_fsm external_forces)
 
diff --git a/src/mc_control/samples/FSM/CMakeLists.txt b/src/mc_control/samples/FSM/CMakeLists.txt
index 6e11ac5d4..8ba96a78b 100644
--- a/src/mc_control/samples/FSM/CMakeLists.txt
+++ b/src/mc_control/samples/FSM/CMakeLists.txt
@@ -2,6 +2,7 @@ add_subdirectory(src)
 
 mc_rtc_set_prefix(FSM_STATES mc_controller/fsm/states)
 set(MC_FSM_STATES_DATA_INSTALL_PREFIX "${MC_FSM_STATES_RUNTIME_INSTALL_PREFIX}/data")
+set(MC_FSM_STATES_DATA_DESTINATION_PREFIX "${MC_FSM_STATES_RUNTIME_DESTINATION_PREFIX}/data")
 configure_file(etc/FSM.in.conf ${CMAKE_CURRENT_BINARY_DIR}/etc/FSM.conf)
 
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/etc/FSM.conf
diff --git a/src/mc_control/samples/FSM/etc/FSM.in.conf b/src/mc_control/samples/FSM/etc/FSM.in.conf
index 619e6e2b0..908822777 100644
--- a/src/mc_control/samples/FSM/etc/FSM.in.conf
+++ b/src/mc_control/samples/FSM/etc/FSM.in.conf
@@ -7,9 +7,9 @@
   // otherwise the FSM holds the last state until transition
   "IdleKeepState": false,
   // Where to look for state libraries
-  "StatesLibraries": ["@MC_FSM_STATES_RUNTIME_INSTALL_PREFIX@"],
+  "StatesLibraries": ["@MC_FSM_STATES_RUNTIME_DESTINATION_PREFIX@"],
   // Where to look for state files
-  "StatesFiles": ["@MC_FSM_STATES_DATA_INSTALL_PREFIX@"],
+  "StatesFiles": ["@MC_FSM_STATES_DATA_DESTINATION_PREFIX@"],
   // If true, state factory will be more verbose
   "VerboseStateFactory": false,
   // Additional robots to load
diff --git a/src/mc_control/samples/LIPMStabilizer/etc/LIPMStabilizer.in.yaml b/src/mc_control/samples/LIPMStabilizer/etc/LIPMStabilizer.in.yaml
index 1a51493db..725616120 100644
--- a/src/mc_control/samples/LIPMStabilizer/etc/LIPMStabilizer.in.yaml
+++ b/src/mc_control/samples/LIPMStabilizer/etc/LIPMStabilizer.in.yaml
@@ -13,10 +13,10 @@ StepByStep: false
 IdleKeepState: true
 # Where to look for state libraries
 StatesLibraries:
-- "@LIPMStabilizer_STATES_INSTALL_PREFIX@"
+- "@LIPMStabilizer_STATES_DESTINATION_PREFIX@"
 # Where to look for state files
 StatesFiles:
-- "@LIPMStabilizer_STATES_DATA_INSTALL_PREFIX@"
+- "@LIPMStabilizer_STATES_DATA_DESTINATION_PREFIX@"
 # If true, state factory will be more verbose
 VerboseStateFactory: false
 
diff --git a/src/mc_observers/CMakeLists.txt b/src/mc_observers/CMakeLists.txt
index af20d7cb7..673618ad1 100644
--- a/src/mc_observers/CMakeLists.txt
+++ b/src/mc_observers/CMakeLists.txt
@@ -24,7 +24,7 @@ add_observer(KinematicInertialPoseObserver)
 add_observer(KinematicInertialObserver)
 if(NOT MC_RTC_BUILD_STATIC)
   target_link_libraries(KinematicInertialObserver PUBLIC KinematicInertialPoseObserver)
-  set_target_properties(KinematicInertialObserver PROPERTIES INSTALL_RPATH ${MC_OBSERVERS_RUNTIME_INSTALL_PREFIX})
+  set_target_properties(KinematicInertialObserver PROPERTIES INSTALL_RPATH ${MC_OBSERVERS_RUNTIME_DESTINATION_PREFIX})
 endif()
 
 if(NOT MC_RTC_BUILD_STATIC)
